@using Entity
@model List<ProductInfo>
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <link href="//fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700&display=swap" rel="stylesheet">
    <style>
        :root {
            --primary-color: #1E90FF;
            --secondary-color: #FF6B6B;
            --text-dark: #2d3436;
            --text-light: #636e72;
            --shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
        }

        body {
            font-family: 'Roboto', sans-serif;
            padding: 2rem;
            background-color: #f8f9fa;
            max-width: 1200px;
            margin: 0 auto;
        }

        .search-container {
            display: flex;
            gap: 1rem;
            margin-bottom: 2rem;
        }

        #search {
            flex: 1;
            padding: 0.75rem 1.25rem;
            border: 1px solid #ddd;
            border-radius: 25px;
            font-size: 1rem;
            transition: all 0.3s ease;
        }

            #search:focus {
                outline: none;
                border-color: var(--primary-color);
                box-shadow: 0 0 0 3px rgba(30, 144, 255, 0.1);
            }

        .search-btn {
            background-color: var(--primary-color);
            color: white;
            border: none;
            padding: 0.75rem 1.5rem;
            border-radius: 25px;
            cursor: pointer;
            transition: transform 0.2s ease;
        }

            .search-btn:hover {
                transform: translateY(-2px);
            }

        .category-bar {
            display: flex;
            gap: 1rem;
            margin: 2rem 0;
            flex-wrap: wrap;
        }

        .category-btn {
            background: white;
            border: 1px solid #ddd;
            padding: 0.5rem 1rem;
            border-radius: 20px;
            cursor: pointer;
            transition: all 0.2s ease;
        }

            .category-btn:hover {
                border-color: var(--primary-color);
                color: var(--primary-color);
                transform: translateY(-2px);
            }

        .product-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
            gap: 2rem;
            padding: 1rem 0;
        }

        .product-card {
            background: white;
            border-radius: 12px;
            overflow: hidden;
            box-shadow: var(--shadow);
            transition: all 0.3s ease;
            position: relative;
        }

            .product-card:hover {
                transform: translateY(-5px);
                box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1);
            }

        .product-image {
            height: 280px;
            background-size: cover;
            background-position: center;
            position: relative;
        }

        .product-info {
            padding: 1.5rem;
        }

        .product-title {
            font-weight: 500;
            color: var(--text-dark);
            margin-bottom: 0.5rem;
            font-size: 1.1rem;
            height: 3em;
            overflow: hidden;
            text-overflow: ellipsis;
            display: -webkit-box;
            -webkit-line-clamp: 2;
            -webkit-box-orient: vertical;
        }

        .product-price {
            color: var(--secondary-color);
            font-weight: 700;
            font-size: 1.25rem;
            margin-top: 0.5rem;
        }

        .product-action {
            position: absolute;
            top: 1rem;
            right: 1rem;
            display: flex;
            gap: 0.5rem;
            opacity: 0;
            transition: opacity 0.3s ease;
        }

        .product-card:hover .product-action {
            opacity: 1;
        }

        .btn-cart {
            background: var(--secondary-color);
            color: white;
            border: none;
            width: 40px;
            height: 40px;
            border-radius: 50%;
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: center;
            transition: all 0.2s ease;
            box-shadow: var(--shadow);
        }

            .btn-cart:hover {
                background: #ff4757;
                transform: scale(1.1);
            }

        @@media (max-width: 768px) {
            body

        {
            padding: 1rem;
        }

        .product-grid {
            grid-template-columns: 1fr;
        }

        .product-image {
            height: 200px;
        }

        }</style>
</head>
<body>
    <div class="search-container">
        <input type="text" id="search" placeholder="ÊêúÁ¥¢ÂïÜÂìÅ..." value="@Context.Request.Query["search"]">
        <button class="search-btn" onclick="searchProducts()">
            üîç ÊêúÁ¥¢
        </button>
    </div>

    <div class="category-bar">
        @foreach (var cat in ViewBag.Categories)
        {
            <button class="category-btn" onclick="window.location.href='/product?category=@cat'">
                @cat
            </button>
        }
    </div>

    <div class="product-grid">
        @foreach (var product in Model)
        {
            <div class="product-card">
                <div class="product-image"
                     style="background-image: url('@product.PhotoUrl')"
                     onclick="window.location.href='/product/DetailProduct?productId=@product.Id'"></div>
                <div class="product-info">
                    <div class="product-title">@product.Name</div>
                    <div class="product-price">¬•@product.Price</div>
                </div>
                <div class="product-action">
                    <button onclick="addToCart(@product.Id)">üõí</button>
                </div>
            </div>
        }
    </div>

    <script>
        function searchProducts() {
            const searchTerm = document.getElementById('search').value;
            const category = new URLSearchParams(window.location.search).get('category');
            let url = `/product?search=${encodeURIComponent(searchTerm)}`;
            if (category) url += `&category=${category}`;
            window.location.href = url;
        }
    </script>
    <script>
        // Áªü‰∏ÄÂ§ÑÁêÜAJAXËØ∑Ê±ÇÈÄªËæë
            async function addToCart(productId) {
            try {
                const response = await fetch(`/Cart/Add?productId=${productId}`, {
                    method: 'POST'
                });

                if (response.ok) {
                    alert('ÊàêÂäüÊ∑ªÂä†Âà∞Ë¥≠Áâ©ËΩ¶');
                } else {
                    const error = await response.text();
                    alert(error);
                }
            } catch (e) {
                alert('ÁΩëÁªúÈîôËØØ');
            }
        }

        // ÁõëÂê¨Ë¥≠Áâ©ËΩ¶Êõ¥Êñ∞‰∫ã‰ª∂ÔºàÊõ¥Êñ∞ËßíÊ†áÁ≠âÔºâ
        document.addEventListener('cartUpdated', function() {
            fetch('/cart/count')
                .then(res => res.json())
                .then(data => {
                    const countEl = document.getElementById('cartCount');
                    if (countEl) countEl.textContent = data.count;
                });
        });
    </script>
</body>
</html>
